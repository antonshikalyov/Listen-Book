// Generated by view binder compiler. Do not edit!
package com.example.listenbook.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.listenbook.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogThemesBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button autoTheme;

  @NonNull
  public final Button darkTheme;

  @NonNull
  public final Button exitDialogButtonThemes;

  @NonNull
  public final Button lightTheme;

  private DialogThemesBinding(@NonNull ConstraintLayout rootView, @NonNull Button autoTheme,
      @NonNull Button darkTheme, @NonNull Button exitDialogButtonThemes,
      @NonNull Button lightTheme) {
    this.rootView = rootView;
    this.autoTheme = autoTheme;
    this.darkTheme = darkTheme;
    this.exitDialogButtonThemes = exitDialogButtonThemes;
    this.lightTheme = lightTheme;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogThemesBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogThemesBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_themes, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogThemesBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.auto_theme;
      Button autoTheme = ViewBindings.findChildViewById(rootView, id);
      if (autoTheme == null) {
        break missingId;
      }

      id = R.id.dark_theme;
      Button darkTheme = ViewBindings.findChildViewById(rootView, id);
      if (darkTheme == null) {
        break missingId;
      }

      id = R.id.exitDialogButtonThemes;
      Button exitDialogButtonThemes = ViewBindings.findChildViewById(rootView, id);
      if (exitDialogButtonThemes == null) {
        break missingId;
      }

      id = R.id.light_theme;
      Button lightTheme = ViewBindings.findChildViewById(rootView, id);
      if (lightTheme == null) {
        break missingId;
      }

      return new DialogThemesBinding((ConstraintLayout) rootView, autoTheme, darkTheme,
          exitDialogButtonThemes, lightTheme);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
