// Generated by view binder compiler. Do not edit!
package com.example.listenbook.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.SeekBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.listenbook.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPlayButtonsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageButton alarmControlPanel;

  @NonNull
  public final ImageView asd;

  @NonNull
  public final ImageButton bookmarkControlPanel;

  @NonNull
  public final ImageButton moreButtonPlay;

  @NonNull
  public final LinearLayout moreButtonPlayBlock;

  @NonNull
  public final ImageButton noteControlPanel;

  @NonNull
  public final LinearLayout playButtonsLayout;

  @NonNull
  public final TextView playReaded;

  @NonNull
  public final TextView playSurplus;

  @NonNull
  public final ImageButton resumeButton;

  @NonNull
  public final SeekBar simpleSeekBar;

  @NonNull
  public final SeekBar simpleSeekBarSound;

  @NonNull
  public final ImageButton smallBackButton;

  @NonNull
  public final LinearLayout smallControlPanel;

  @NonNull
  public final ImageButton smallForwardButton;

  @NonNull
  public final ImageButton smallNextButton;

  @NonNull
  public final ImageButton smallPrevButton;

  @NonNull
  public final ImageButton speedControlPanel;

  @NonNull
  public final ImageButton wifi;

  private ActivityPlayButtonsBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageButton alarmControlPanel, @NonNull ImageView asd,
      @NonNull ImageButton bookmarkControlPanel, @NonNull ImageButton moreButtonPlay,
      @NonNull LinearLayout moreButtonPlayBlock, @NonNull ImageButton noteControlPanel,
      @NonNull LinearLayout playButtonsLayout, @NonNull TextView playReaded,
      @NonNull TextView playSurplus, @NonNull ImageButton resumeButton,
      @NonNull SeekBar simpleSeekBar, @NonNull SeekBar simpleSeekBarSound,
      @NonNull ImageButton smallBackButton, @NonNull LinearLayout smallControlPanel,
      @NonNull ImageButton smallForwardButton, @NonNull ImageButton smallNextButton,
      @NonNull ImageButton smallPrevButton, @NonNull ImageButton speedControlPanel,
      @NonNull ImageButton wifi) {
    this.rootView = rootView;
    this.alarmControlPanel = alarmControlPanel;
    this.asd = asd;
    this.bookmarkControlPanel = bookmarkControlPanel;
    this.moreButtonPlay = moreButtonPlay;
    this.moreButtonPlayBlock = moreButtonPlayBlock;
    this.noteControlPanel = noteControlPanel;
    this.playButtonsLayout = playButtonsLayout;
    this.playReaded = playReaded;
    this.playSurplus = playSurplus;
    this.resumeButton = resumeButton;
    this.simpleSeekBar = simpleSeekBar;
    this.simpleSeekBarSound = simpleSeekBarSound;
    this.smallBackButton = smallBackButton;
    this.smallControlPanel = smallControlPanel;
    this.smallForwardButton = smallForwardButton;
    this.smallNextButton = smallNextButton;
    this.smallPrevButton = smallPrevButton;
    this.speedControlPanel = speedControlPanel;
    this.wifi = wifi;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPlayButtonsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPlayButtonsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_play_buttons, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPlayButtonsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.alarm_control_panel;
      ImageButton alarmControlPanel = ViewBindings.findChildViewById(rootView, id);
      if (alarmControlPanel == null) {
        break missingId;
      }

      id = R.id.asd;
      ImageView asd = ViewBindings.findChildViewById(rootView, id);
      if (asd == null) {
        break missingId;
      }

      id = R.id.bookmark_control_panel;
      ImageButton bookmarkControlPanel = ViewBindings.findChildViewById(rootView, id);
      if (bookmarkControlPanel == null) {
        break missingId;
      }

      id = R.id.more_button_play;
      ImageButton moreButtonPlay = ViewBindings.findChildViewById(rootView, id);
      if (moreButtonPlay == null) {
        break missingId;
      }

      id = R.id.more_button_play_block;
      LinearLayout moreButtonPlayBlock = ViewBindings.findChildViewById(rootView, id);
      if (moreButtonPlayBlock == null) {
        break missingId;
      }

      id = R.id.note_control_panel;
      ImageButton noteControlPanel = ViewBindings.findChildViewById(rootView, id);
      if (noteControlPanel == null) {
        break missingId;
      }

      id = R.id.playButtonsLayout;
      LinearLayout playButtonsLayout = ViewBindings.findChildViewById(rootView, id);
      if (playButtonsLayout == null) {
        break missingId;
      }

      id = R.id.playReaded;
      TextView playReaded = ViewBindings.findChildViewById(rootView, id);
      if (playReaded == null) {
        break missingId;
      }

      id = R.id.playSurplus;
      TextView playSurplus = ViewBindings.findChildViewById(rootView, id);
      if (playSurplus == null) {
        break missingId;
      }

      id = R.id.resumeButton;
      ImageButton resumeButton = ViewBindings.findChildViewById(rootView, id);
      if (resumeButton == null) {
        break missingId;
      }

      id = R.id.simpleSeekBar;
      SeekBar simpleSeekBar = ViewBindings.findChildViewById(rootView, id);
      if (simpleSeekBar == null) {
        break missingId;
      }

      id = R.id.simpleSeekBarSound;
      SeekBar simpleSeekBarSound = ViewBindings.findChildViewById(rootView, id);
      if (simpleSeekBarSound == null) {
        break missingId;
      }

      id = R.id.small_backButton;
      ImageButton smallBackButton = ViewBindings.findChildViewById(rootView, id);
      if (smallBackButton == null) {
        break missingId;
      }

      id = R.id.small_control_panel;
      LinearLayout smallControlPanel = ViewBindings.findChildViewById(rootView, id);
      if (smallControlPanel == null) {
        break missingId;
      }

      id = R.id.small_forwardButton;
      ImageButton smallForwardButton = ViewBindings.findChildViewById(rootView, id);
      if (smallForwardButton == null) {
        break missingId;
      }

      id = R.id.small_nextButton;
      ImageButton smallNextButton = ViewBindings.findChildViewById(rootView, id);
      if (smallNextButton == null) {
        break missingId;
      }

      id = R.id.small_prevButton;
      ImageButton smallPrevButton = ViewBindings.findChildViewById(rootView, id);
      if (smallPrevButton == null) {
        break missingId;
      }

      id = R.id.speed_control_panel;
      ImageButton speedControlPanel = ViewBindings.findChildViewById(rootView, id);
      if (speedControlPanel == null) {
        break missingId;
      }

      id = R.id.wifi;
      ImageButton wifi = ViewBindings.findChildViewById(rootView, id);
      if (wifi == null) {
        break missingId;
      }

      return new ActivityPlayButtonsBinding((ConstraintLayout) rootView, alarmControlPanel, asd,
          bookmarkControlPanel, moreButtonPlay, moreButtonPlayBlock, noteControlPanel,
          playButtonsLayout, playReaded, playSurplus, resumeButton, simpleSeekBar,
          simpleSeekBarSound, smallBackButton, smallControlPanel, smallForwardButton,
          smallNextButton, smallPrevButton, speedControlPanel, wifi);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
