// Generated by view binder compiler. Do not edit!
package com.example.listenbook.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.listenbook.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ToolbarLibraryBinding implements ViewBinding {
  @NonNull
  private final Toolbar rootView;

  @NonNull
  public final ImageButton addBook;

  @NonNull
  public final ImageButton burgerButton1;

  @NonNull
  public final ImageButton libraryBackButton;

  @NonNull
  public final TextView textView;

  @NonNull
  public final EditText textView1;

  @NonNull
  public final ImageButton toolbarLibrary1;

  private ToolbarLibraryBinding(@NonNull Toolbar rootView, @NonNull ImageButton addBook,
      @NonNull ImageButton burgerButton1, @NonNull ImageButton libraryBackButton,
      @NonNull TextView textView, @NonNull EditText textView1,
      @NonNull ImageButton toolbarLibrary1) {
    this.rootView = rootView;
    this.addBook = addBook;
    this.burgerButton1 = burgerButton1;
    this.libraryBackButton = libraryBackButton;
    this.textView = textView;
    this.textView1 = textView1;
    this.toolbarLibrary1 = toolbarLibrary1;
  }

  @Override
  @NonNull
  public Toolbar getRoot() {
    return rootView;
  }

  @NonNull
  public static ToolbarLibraryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ToolbarLibraryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.toolbar_library, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ToolbarLibraryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_book;
      ImageButton addBook = ViewBindings.findChildViewById(rootView, id);
      if (addBook == null) {
        break missingId;
      }

      id = R.id.burger_button1;
      ImageButton burgerButton1 = ViewBindings.findChildViewById(rootView, id);
      if (burgerButton1 == null) {
        break missingId;
      }

      id = R.id.library_back_button;
      ImageButton libraryBackButton = ViewBindings.findChildViewById(rootView, id);
      if (libraryBackButton == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = ViewBindings.findChildViewById(rootView, id);
      if (textView == null) {
        break missingId;
      }

      id = R.id.textView1;
      EditText textView1 = ViewBindings.findChildViewById(rootView, id);
      if (textView1 == null) {
        break missingId;
      }

      id = R.id.toolbar_library1;
      ImageButton toolbarLibrary1 = ViewBindings.findChildViewById(rootView, id);
      if (toolbarLibrary1 == null) {
        break missingId;
      }

      return new ToolbarLibraryBinding((Toolbar) rootView, addBook, burgerButton1,
          libraryBackButton, textView, textView1, toolbarLibrary1);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
