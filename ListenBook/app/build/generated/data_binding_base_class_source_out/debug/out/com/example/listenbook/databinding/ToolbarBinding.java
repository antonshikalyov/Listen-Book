// Generated by view binder compiler. Do not edit!
package com.example.listenbook.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.listenbook.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ToolbarBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout navigationDrawer;

  @NonNull
  public final LinearLayout sidebarBookmarks;

  @NonNull
  public final LinearLayout sidebarHistory;

  @NonNull
  public final LinearLayout sidebarLibrary;

  @NonNull
  public final LinearLayout sidebarPlayer;

  @NonNull
  public final LinearLayout sidebarSettings;

  @NonNull
  public final LinearLayout sidebarStatistics;

  private ToolbarBinding(@NonNull LinearLayout rootView, @NonNull LinearLayout navigationDrawer,
      @NonNull LinearLayout sidebarBookmarks, @NonNull LinearLayout sidebarHistory,
      @NonNull LinearLayout sidebarLibrary, @NonNull LinearLayout sidebarPlayer,
      @NonNull LinearLayout sidebarSettings, @NonNull LinearLayout sidebarStatistics) {
    this.rootView = rootView;
    this.navigationDrawer = navigationDrawer;
    this.sidebarBookmarks = sidebarBookmarks;
    this.sidebarHistory = sidebarHistory;
    this.sidebarLibrary = sidebarLibrary;
    this.sidebarPlayer = sidebarPlayer;
    this.sidebarSettings = sidebarSettings;
    this.sidebarStatistics = sidebarStatistics;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ToolbarBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ToolbarBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.toolbar, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ToolbarBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      LinearLayout navigationDrawer = (LinearLayout) rootView;

      id = R.id.sidebar_bookmarks;
      LinearLayout sidebarBookmarks = ViewBindings.findChildViewById(rootView, id);
      if (sidebarBookmarks == null) {
        break missingId;
      }

      id = R.id.sidebar_history;
      LinearLayout sidebarHistory = ViewBindings.findChildViewById(rootView, id);
      if (sidebarHistory == null) {
        break missingId;
      }

      id = R.id.sidebar_library;
      LinearLayout sidebarLibrary = ViewBindings.findChildViewById(rootView, id);
      if (sidebarLibrary == null) {
        break missingId;
      }

      id = R.id.sidebar_player;
      LinearLayout sidebarPlayer = ViewBindings.findChildViewById(rootView, id);
      if (sidebarPlayer == null) {
        break missingId;
      }

      id = R.id.sidebar_settings;
      LinearLayout sidebarSettings = ViewBindings.findChildViewById(rootView, id);
      if (sidebarSettings == null) {
        break missingId;
      }

      id = R.id.sidebar_statistics;
      LinearLayout sidebarStatistics = ViewBindings.findChildViewById(rootView, id);
      if (sidebarStatistics == null) {
        break missingId;
      }

      return new ToolbarBinding((LinearLayout) rootView, navigationDrawer, sidebarBookmarks,
          sidebarHistory, sidebarLibrary, sidebarPlayer, sidebarSettings, sidebarStatistics);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
