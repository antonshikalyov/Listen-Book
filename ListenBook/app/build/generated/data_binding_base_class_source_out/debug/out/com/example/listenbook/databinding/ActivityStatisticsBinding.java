// Generated by view binder compiler. Do not edit!
package com.example.listenbook.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.listenbook.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityStatisticsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ProgressBar activeBlueLine1;

  @NonNull
  public final ProgressBar activeBlueLine2;

  @NonNull
  public final ProgressBar activeBlueLine3;

  @NonNull
  public final ProgressBar activeBlueLine4;

  @NonNull
  public final ProgressBar activeBlueLine5;

  @NonNull
  public final ProgressBar activeBlueLine6;

  @NonNull
  public final ProgressBar activeBlueLine7;

  @NonNull
  public final ProgressBar activeLine1;

  @NonNull
  public final ProgressBar activeLine2;

  @NonNull
  public final ProgressBar activeLine3;

  @NonNull
  public final ProgressBar activeLine4;

  @NonNull
  public final ProgressBar activeLine5;

  @NonNull
  public final ProgressBar activeLine6;

  @NonNull
  public final ProgressBar activeLine7;

  @NonNull
  public final LinearLayout progressBarsContainerBlue;

  @NonNull
  public final LinearLayout progressBarsContainerRed;

  private ActivityStatisticsBinding(@NonNull ConstraintLayout rootView,
      @NonNull ProgressBar activeBlueLine1, @NonNull ProgressBar activeBlueLine2,
      @NonNull ProgressBar activeBlueLine3, @NonNull ProgressBar activeBlueLine4,
      @NonNull ProgressBar activeBlueLine5, @NonNull ProgressBar activeBlueLine6,
      @NonNull ProgressBar activeBlueLine7, @NonNull ProgressBar activeLine1,
      @NonNull ProgressBar activeLine2, @NonNull ProgressBar activeLine3,
      @NonNull ProgressBar activeLine4, @NonNull ProgressBar activeLine5,
      @NonNull ProgressBar activeLine6, @NonNull ProgressBar activeLine7,
      @NonNull LinearLayout progressBarsContainerBlue,
      @NonNull LinearLayout progressBarsContainerRed) {
    this.rootView = rootView;
    this.activeBlueLine1 = activeBlueLine1;
    this.activeBlueLine2 = activeBlueLine2;
    this.activeBlueLine3 = activeBlueLine3;
    this.activeBlueLine4 = activeBlueLine4;
    this.activeBlueLine5 = activeBlueLine5;
    this.activeBlueLine6 = activeBlueLine6;
    this.activeBlueLine7 = activeBlueLine7;
    this.activeLine1 = activeLine1;
    this.activeLine2 = activeLine2;
    this.activeLine3 = activeLine3;
    this.activeLine4 = activeLine4;
    this.activeLine5 = activeLine5;
    this.activeLine6 = activeLine6;
    this.activeLine7 = activeLine7;
    this.progressBarsContainerBlue = progressBarsContainerBlue;
    this.progressBarsContainerRed = progressBarsContainerRed;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityStatisticsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityStatisticsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_statistics, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityStatisticsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.active_blue_line1;
      ProgressBar activeBlueLine1 = ViewBindings.findChildViewById(rootView, id);
      if (activeBlueLine1 == null) {
        break missingId;
      }

      id = R.id.active_blue_line2;
      ProgressBar activeBlueLine2 = ViewBindings.findChildViewById(rootView, id);
      if (activeBlueLine2 == null) {
        break missingId;
      }

      id = R.id.active_blue_line3;
      ProgressBar activeBlueLine3 = ViewBindings.findChildViewById(rootView, id);
      if (activeBlueLine3 == null) {
        break missingId;
      }

      id = R.id.active_blue_line4;
      ProgressBar activeBlueLine4 = ViewBindings.findChildViewById(rootView, id);
      if (activeBlueLine4 == null) {
        break missingId;
      }

      id = R.id.active_blue_line5;
      ProgressBar activeBlueLine5 = ViewBindings.findChildViewById(rootView, id);
      if (activeBlueLine5 == null) {
        break missingId;
      }

      id = R.id.active_blue_line6;
      ProgressBar activeBlueLine6 = ViewBindings.findChildViewById(rootView, id);
      if (activeBlueLine6 == null) {
        break missingId;
      }

      id = R.id.active_blue_line7;
      ProgressBar activeBlueLine7 = ViewBindings.findChildViewById(rootView, id);
      if (activeBlueLine7 == null) {
        break missingId;
      }

      id = R.id.active_line1;
      ProgressBar activeLine1 = ViewBindings.findChildViewById(rootView, id);
      if (activeLine1 == null) {
        break missingId;
      }

      id = R.id.active_line2;
      ProgressBar activeLine2 = ViewBindings.findChildViewById(rootView, id);
      if (activeLine2 == null) {
        break missingId;
      }

      id = R.id.active_line3;
      ProgressBar activeLine3 = ViewBindings.findChildViewById(rootView, id);
      if (activeLine3 == null) {
        break missingId;
      }

      id = R.id.active_line4;
      ProgressBar activeLine4 = ViewBindings.findChildViewById(rootView, id);
      if (activeLine4 == null) {
        break missingId;
      }

      id = R.id.active_line5;
      ProgressBar activeLine5 = ViewBindings.findChildViewById(rootView, id);
      if (activeLine5 == null) {
        break missingId;
      }

      id = R.id.active_line6;
      ProgressBar activeLine6 = ViewBindings.findChildViewById(rootView, id);
      if (activeLine6 == null) {
        break missingId;
      }

      id = R.id.active_line7;
      ProgressBar activeLine7 = ViewBindings.findChildViewById(rootView, id);
      if (activeLine7 == null) {
        break missingId;
      }

      id = R.id.progressBarsContainerBlue;
      LinearLayout progressBarsContainerBlue = ViewBindings.findChildViewById(rootView, id);
      if (progressBarsContainerBlue == null) {
        break missingId;
      }

      id = R.id.progressBarsContainerRed;
      LinearLayout progressBarsContainerRed = ViewBindings.findChildViewById(rootView, id);
      if (progressBarsContainerRed == null) {
        break missingId;
      }

      return new ActivityStatisticsBinding((ConstraintLayout) rootView, activeBlueLine1,
          activeBlueLine2, activeBlueLine3, activeBlueLine4, activeBlueLine5, activeBlueLine6,
          activeBlueLine7, activeLine1, activeLine2, activeLine3, activeLine4, activeLine5,
          activeLine6, activeLine7, progressBarsContainerBlue, progressBarsContainerRed);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
